// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiKoperasi.DataAccess.Dao;

#nullable disable

namespace SiKoperasi.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230105064039_appMig2")]
    partial class appMig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvReq", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApvSchemeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApvStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApvSchemeId");

                    b.ToTable("ApvReq");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvReqTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApvReqId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApvSeq")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClaimed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApvReqId");

                    b.ToTable("ApvReqTask");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvScheme", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApvType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApvScheme");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvSchemeNode", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApvSchemeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("UserRoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApvSchemeId");

                    b.ToTable("ApvSchemeNode");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Commons.DriveFolderMap", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FolderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriveFolderMap");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Commons.RefMaster", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefMaster");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.InstalmentSchedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InstAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InstDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LateChargeAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("OsInterestAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OsPrincipalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PayAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrincipalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("InstalmentSchedule");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.Loan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CurrentDueNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GoLiveDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LoanAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanDueNum")
                        .HasColumnType("int");

                    b.Property<string>("LoanNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanSchemeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NextDueNum")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanSchemeId");

                    b.HasIndex("MemberId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefLoanDocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("RefLoanDocumentId");

                    b.ToTable("LoanDocument");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanGuarantee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuaranteeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuaranteeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LetterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LetterExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LetterNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanGuarantee");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanPayment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstSeqNo")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanPayment");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanScheme", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<int>("DueNum")
                        .HasColumnType("int");

                    b.Property<bool>("IsUseGuarantee")
                        .HasColumnType("bit");

                    b.Property<string>("LoanSchemeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PlafondAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoanScheme");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.RefLoanDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcceptedFileExt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int>("MaxFileSize")
                        .HasColumnType("int");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefLoanDocument");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.District", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.MasterSequence", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MasterSeqCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterSeqName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("NumLength")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RessetFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.Property<string>("Sufix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MasterSequence");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.Province", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.SubDistrict", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("SubDistrict");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Address", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDistrictId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Job", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("Job");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIdVerified")
                        .HasColumnType("bit");

                    b.Property<string>("MartialStat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NpwpNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BeginBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CashBankAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EndBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TrxDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashBankAccountId");

                    b.ToTable("CashBank");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSavingDefault")
                        .HasColumnType("bit");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CashBankAccount");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBankTrx", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CashBankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OutAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashBankId");

                    b.ToTable("CashBankTrx");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.PayHistD", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstSeqNo")
                        .HasColumnType("int");

                    b.Property<decimal>("OutAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayHistHId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PayHistSeqNo")
                        .HasColumnType("int");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PayHistHId");

                    b.ToTable("PayHistD");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.PayHistH", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReverse")
                        .HasColumnType("bit");

                    b.Property<string>("ReverseNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrxDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PayHistH");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.RefSavingType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CutAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithdrawal")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimalAmountDeposit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SavingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SavingRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefSavingType");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.Saving", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CutAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("MonthlyDepositAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RefSavingTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("RefSavingTypeId");

                    b.ToTable("Saving");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.SavingTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SavingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TrxDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrxMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrxType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("TrxValueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SavingId");

                    b.ToTable("SavingTransaction");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AllocationAmt")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpense")
                        .HasColumnType("bit");

                    b.Property<string>("ShuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShuAllocation");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AllocationAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AllocationPrcnt")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShuAllocationTrxDistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("ShuAllocationTrxDistId");

                    b.ToTable("ShuAllocationMember");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrx", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TrxDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearPeriod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShuAllocationTrx");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrxDist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AllocationAmt")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AllocationPrcnt")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtmCrt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtmUpd")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShuAllocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShuAllocationTrxId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsrCrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrUpd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShuAllocationId");

                    b.HasIndex("ShuAllocationTrxId");

                    b.ToTable("ShuAllocationTrxDist");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvReq", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Approvals.ApvScheme", "ApvScheme")
                        .WithMany("ApvReqs")
                        .HasForeignKey("ApvSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApvScheme");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvReqTask", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Approvals.ApvReq", "ApvReq")
                        .WithMany("ApvReqTasks")
                        .HasForeignKey("ApvReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApvReq");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvSchemeNode", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Approvals.ApvScheme", "ApvScheme")
                        .WithMany("ApvSchemeNodes")
                        .HasForeignKey("ApvSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApvScheme");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.InstalmentSchedule", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.Loan", "Loan")
                        .WithMany("InstalmentSchedules")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.Loan", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.LoanScheme", "LoanScheme")
                        .WithMany()
                        .HasForeignKey("LoanSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Members.Member", "Member")
                        .WithMany("Loans")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanScheme");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanDocument", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.Loan", "Loan")
                        .WithMany("LoanDocuments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.RefLoanDocument", "RefLoanDocument")
                        .WithMany("Documents")
                        .HasForeignKey("RefLoanDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("RefLoanDocument");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanGuarantee", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.Loan", "Loan")
                        .WithMany("LoanGuarantees")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.LoanPayment", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Loans.Loan", "Loan")
                        .WithMany("LoanPayments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.City", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.District", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.SubDistrict", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.District", "District")
                        .WithMany("SubDistricts")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Address", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Members.Member", "Member")
                        .WithOne("Address")
                        .HasForeignKey("SiKoperasi.DataAccess.Models.Members.Address", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.Province", "Province")
                        .WithMany("Addresses")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.MasterData.SubDistrict", "SubDistrict")
                        .WithMany("Addresses")
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Member");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Job", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Members.Member", "Member")
                        .WithOne("Job")
                        .HasForeignKey("SiKoperasi.DataAccess.Models.Members.Job", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBank", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Payments.CashBankAccount", "CashBankAccount")
                        .WithMany("CashBanks")
                        .HasForeignKey("CashBankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashBankAccount");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBankTrx", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Payments.CashBank", "CashBank")
                        .WithMany("CashBankTrxes")
                        .HasForeignKey("CashBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashBank");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.PayHistD", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Payments.PayHistH", "PayHistH")
                        .WithMany("PayHistDs")
                        .HasForeignKey("PayHistHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayHistH");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.Saving", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Members.Member", "Member")
                        .WithMany("Savings")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Savings.RefSavingType", "RefSavingType")
                        .WithMany("Savings")
                        .HasForeignKey("RefSavingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("RefSavingType");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.SavingTransaction", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Savings.Saving", "Saving")
                        .WithMany("SavingTransactions")
                        .HasForeignKey("SavingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saving");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationMember", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Members.Member", "Member")
                        .WithMany("ShuAllocationMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrxDist", "ShuAllocationTrxDist")
                        .WithMany("ShuAllocationMembers")
                        .HasForeignKey("ShuAllocationTrxDistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("ShuAllocationTrxDist");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrxDist", b =>
                {
                    b.HasOne("SiKoperasi.DataAccess.Models.Shu.ShuAllocation", "ShuAllocation")
                        .WithMany()
                        .HasForeignKey("ShuAllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrx", "ShuAllocationTrx")
                        .WithMany("ShuAllocationTrxDists")
                        .HasForeignKey("ShuAllocationTrxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShuAllocation");

                    b.Navigation("ShuAllocationTrx");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvReq", b =>
                {
                    b.Navigation("ApvReqTasks");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Approvals.ApvScheme", b =>
                {
                    b.Navigation("ApvReqs");

                    b.Navigation("ApvSchemeNodes");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.Loan", b =>
                {
                    b.Navigation("InstalmentSchedules");

                    b.Navigation("LoanDocuments");

                    b.Navigation("LoanGuarantees");

                    b.Navigation("LoanPayments");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Loans.RefLoanDocument", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.District", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("SubDistricts");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.Province", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.MasterData.SubDistrict", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Members.Member", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Job")
                        .IsRequired();

                    b.Navigation("Loans");

                    b.Navigation("Savings");

                    b.Navigation("ShuAllocationMembers");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBank", b =>
                {
                    b.Navigation("CashBankTrxes");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.CashBankAccount", b =>
                {
                    b.Navigation("CashBanks");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Payments.PayHistH", b =>
                {
                    b.Navigation("PayHistDs");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.RefSavingType", b =>
                {
                    b.Navigation("Savings");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Savings.Saving", b =>
                {
                    b.Navigation("SavingTransactions");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrx", b =>
                {
                    b.Navigation("ShuAllocationTrxDists");
                });

            modelBuilder.Entity("SiKoperasi.DataAccess.Models.Shu.ShuAllocationTrxDist", b =>
                {
                    b.Navigation("ShuAllocationMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
